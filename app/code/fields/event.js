// Code generated by codegen from SQL table event
;(function(){

getEventFields = function() {

  return [{
      name: 'event.ID',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'ID',
        templateOptions: {
          type: 'text',
        }
      }
    },{
      name: 'event.SiteId',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'SiteId',
        templateOptions: {
          type: 'text',
          label: 'Site ID'
        }
      }
    },{
      name: 'event.Type',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Type',
        templateOptions: {
          type: 'text',
          label: 'Event Type',
          disabled: true
        }
      }
    },{
      name: 'event.RefId',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'RefId',
        templateOptions: {
          type: 'text',
          label: 'Ref ID'
        }
      }
    },{
      name: 'event.Priority',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Priority',
        templateOptions: {
          type: 'text',
        }
      }
    },{
      name: 'event.Startdate',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'StartDate',
        templateOptions: {
          type: 'text',
          label: 'Date Created',
          disabled: true
        }
      }
    },{
      name: 'event.ParentEvent',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'ParentEvent',
        templateOptions: {
          type: 'text',
          label: 'Parent Event'
        }
      }
    },{
      name: 'event.Username',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Username',
        templateOptions: {
          type: 'text',
          label: 'Initially Raised By',
          disabled: true,
        }
      }
    },{
      name: 'event.CreatedBy',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'CreatedBy',
        templateOptions: {
          type: 'text',
          label: 'Initially Raised By'
        }
      }
    },{
      name: 'event.AllocatedBy',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'AllocatedBy',
        templateOptions: {
          type: 'text',
          label: 'Allocated By'
        }
      }
    },{
      name: 'event.AllocatedTo',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'AllocatedTo',
        templateOptions: {
          type: 'text',
          label: 'Allocated To'
        }
      }
    },{
      name: 'event.AllocatedByUser',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'AllocatedByUser',
        templateOptions: {
          type: 'text',
          label: 'Allocated By',
          disabled: true
        }
      }
    },{
      name: 'event.AllocatedToUser',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'AllocatedToUser',
        templateOptions: {
          type: 'text',
          label: 'Allocated To',
          disabled: true
        }
      }
    },{
      name: 'event.Completed',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Completed',
        templateOptions: {
          type: 'text',
          label: 'Date Completed',
          disabled: true
        }
      }
    },{
      name: 'event.LabourCost',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'LabourCost',
        templateOptions: {
          type: 'text',
          label: 'Labour Cost',
          disabled: true
        }
      }
    },{
      name: 'event.MaterialCost',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'MaterialCost',
        templateOptions: {
          type: 'text',
          label: 'Material Cost',
          disabled: true
        }
      }
    },{
      name: 'event.OtherCost',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'OtherCost',
        templateOptions: {
          type: 'text',
          label: 'Other Cost',
          disabled: true
        }
      }
    },{
      name: 'event.Notes',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Notes',
        templateOptions: {
          type: 'text',
          label: 'Notes'
        }
      }
    },{
      name: 'event.Status',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Status',
        templateOptions: {
          type: 'text',
          label: 'Status',
          disabled: true          
        }
      }
    },{
      name: 'eventCost.Description',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Descr',
        templateOptions: {
          type: 'text',
          label: 'Description',
        }
      }
    },{
      name: 'eventCost.LabourCost',
      extends: 'lx-number',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'LabourCost',
        templateOptions: {
          label: 'Labour Cost',
        }
      }
    },{
      name: 'eventCost.MaterialCost',
      extends: 'lx-number',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'MaterialCost',
        templateOptions: {
          label: 'Material Cost',
        }
      }
    },{
      name: 'eventCost.OtherCost',
      extends: 'lx-number',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'OtherCost',
        templateOptions: {
          label: 'Other Cost',
        }
      }
    },{
      name: 'eventWorkOrder.Description',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Descr',
        templateOptions: {
          type: 'text',
          label: 'Description',
        }
      }
    },{
      name: 'eventWorkOrder.StartDate',
      extends: 'lx-date-picker',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'StartDate',
        templateOptions: {
          label: 'Start Date',
        },
        controller: ['$scope',function($scope) {
          if (!angular.isDefined($scope.model.Date)) {
            var d = new Date()
            $scope.model.Date = d
            d.setMinutes(0)
            d.setSeconds(0)
            d.setMilliseconds(0)
            $scope.model.Time = d
          }
        }]
      }
    },{
      name: 'eventWorkOrder.Time',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Time',
        templateOptions: {
          type: 'time',
          label: '',
        }
      }
    },{
      name: 'eventWorkOrder.EstDuration',
      extends: 'lx-number',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'EstDuration',
        templateOptions: {
          label: 'Est Duration (Minutes)',
          step: 30,   // allow operator to incr in half hour blocks
        }
      }
    },{
      name: 'eventWorkOrder.Skills',
      extends: 'lx-select',
      defaultOptions: {
        key: 'Skills',
        templateOptions: {
          placeholder: "Select Skills",
          space: true,
          multiple: true,
          choice: "Name",
          selected: "Name",
          options: [],
        },
        controller: ['$scope','DBSkill',function($scope,DBSkill) {
          $scope.to.options = DBSkill.query()
        }]
      }
    },{
      name: 'eventWorkOrder.AssignTo',
      extends: 'lx-select',
      defaultOptions: {
        key: 'Assignees',
        templateOptions: {
          placeholder: "Assign To",
          space: true,
          multiple: true,
          choice: "Name",
          selected: "Name",
          options: [],
        },
        controller: ['$scope','DBUser',function($scope,DBUser) {
          $scope.to.options = DBUser.query()
        }]
      }
    },{
      name: 'eventWorkOrder.Documents',
      extends: 'lx-select',
      defaultOptions: {
        key: 'Documents',
        templateOptions: {
          placeholder: "Select Documents",
          space: true,
          multiple: true,
          choice: "Name",
          selected: "Name",
          options: [],
        },
        controller: ['$scope','DBEventDocs','$stateParams',function($scope,DBEventDocs,$stateParams) {
          $scope.to.options = DBEventDocs.query({id: $stateParams.id})
        }]
      }
    },{
      name: 'eventComplete.Description',
      extends: 'lx-input',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Descr',
        templateOptions: {
          type: 'text',
          label: 'Enter Notes on Completing this Issue',
        }
      }
    },{
      name: 'eventComplete.Date',
      extends: 'lx-date-picker',
      wrapper: 'lx-wrapper-errors',
      defaultOptions: {
        key: 'Date',
        templateOptions: {
          label: 'Date Complete',
        }
      }

  }] // end fields

} // getEventFields

getEventCostForm = function() {

  return [{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "12"},
      fields: [
        {type: 'eventCost.Description'},
      ]
    }
  },{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "4"},
      fields: [
        {type: 'eventCost.LabourCost'},
        {type: 'eventCost.MaterialCost'},
        {type: 'eventCost.OtherCost'},
      ]
    }
  }]
}

getEventWorkOrderForm = function() {

  return [{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "4"},
      fields: [
        {type: 'eventWorkOrder.StartDate'},
        {type: 'eventWorkOrder.Time'},
        {type: 'eventWorkOrder.EstDuration'},
      ]
    }
  },{    
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "12"},
      fields: [
        {type: 'eventWorkOrder.Description'},
      ]
    }
  },{    
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "6"},
      fields: [
        {type: 'eventWorkOrder.Skills'},
        {type: 'eventWorkOrder.AssignTo'},
      ]
    }
  },{    
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "12"},
      fields: [
        {type: 'eventWorkOrder.Documents'},
      ]
    }
  }]
}

getWorkOrderForm = function() {

  return [{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "4"},
      fields: [
        {type: 'eventWorkOrder.StartDate'},
        {type: 'eventWorkOrder.Time'},
        {type: 'eventWorkOrder.EstDuration'},
      ]
    }
  },{    
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "12"},
      fields: [
        {type: 'eventWorkOrder.Description'},
      ]
    }
  },{    
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "6"},
      fields: [
        {type: 'eventWorkOrder.Skills'},
        {type: 'eventWorkOrder.AssignTo'},
      ]
    }
/*  },{    
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "12"},
      fields: [
        {type: 'eventWorkOrder.Documents'},
      ]
    }*/
  }]
}

getEventCompleteForm = function() {

  return [{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "6"},
      fields: [
        {type: 'eventComplete.Date'},
      ]
    }
  },{    
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "12"},
      fields: [
        {type: 'eventComplete.Description'},
      ]
    }
  }]
}

getEventForm = function() {

  return [{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "6"},
      fields: [
        {type: 'event.Type'},
      ]
    }
  },{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "6"},
      fields: [
        {type: 'event.Startdate'},
        {type: 'event.Completed'},
      ]
    }
  },{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "4"},
      fields: [
        {type: 'event.Username'},
        {type: 'event.AllocatedByUser'},
        {type: 'event.AllocatedToUser'},
      ]
    }
  },{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "4"},
      fields: [
        {type: 'event.LabourCost'},
        {type: 'event.MaterialCost'},
        {type: 'event.OtherCost'},
      ]
    }
  },{
    type: 'lx-flex',
    templateOptions: {
      flex: { container: "row", item: "12"},
      fields: [
        {type: 'event.Status'},
      ]
    }

  }]
} // getEventForm

})();
